#!/bin/bash


success="[\033[1;32msmash\033[0m]"
fail="[\033[1;31mpass\033[0m]"

banner() {

    while read -r line; do
        echo -e "$line"
    done <<- EOF
    
    \033[0;31m ██████                  █████
    ░██░░░██ ██   ██ ██████ ██░░░██  █████
    ░██  ░██░██  ░██░░██░░█░██  ░██ ██░░░██
    ░██████ ░██  ░██ ░██ ░ ░░██████░███████
    ░██░░░  ░██  ░██ ░██    ░░░░░██░██░░░░
    ░██     ░░██████░███     █████ ░░██████
    ░░       ░░░░░░ ░░░     ░░░░░   ░░░░░░\033[0m
    

    -[[\033[3mMade by \033[1;36mSynAcktra \033[37m&\033[0m \033[1;36mBiswajeetRay7\033[0m\033[0m]]-


EOF
}

help_text () {

    while read -r line; do
        echo -e "$line"
    done <<-EOF
	|Options:
	|  -U   update this script
	|
    |Usage:
    |  purge subdomain.txt
    |  cat subdomain.txt | purge
    |  subfinder -d domain.TLD | purge
    |
    |if [ URL = PURGE'd ]; then $success
    |else $fail fi
EOF
}

die() {
    printf "\33[2K\r\033[1;31m%s\033[0m\n" "$*" >&2
    exit 1
}

update_script() {
    update="$(curl -s -A "$agent" "https://raw.githubusercontent.com/synacktraa/purge/master/purge")" || die "Connection error"
    update="$(printf '%s\n' "$update" | diff -u "$0" -)"
    if [ -z "$update" ]; then
        printf "Script is up to date :)\n"
    else
        if printf '%s\n' "$update" | patch "$0" -; then
            printf "Script has been updated\n"
        else
            die "Can't update for some reason!"
        fi
    fi
    exit 0
}

dep_chk() {
    for dep; do
        command -v "$dep" >/dev/null || die "Program \"$dep\" not found. Please install it."
    done
}

banner

if [ -p  /dev/stdin ]; then
	:
elif [ -z "$*" ]; then
	help_text
	exit 0
elif [ $# -eq 1 ] && [ "$1" = "-U" ]; then
	update_script
fi

dep_chk "curl" "jq"

outfile="/tmp/purgedAt_$(date +"%Y-%m-%d_%H-%M-%S").urls"
while IFS= read -r domain; do
	
	status=$(curl --connect-timeout 3 -sX PURGE "$domain" | jq '.status' 2> /dev/null)
	if [ "$status" = '"ok"' ]; then
		echo $domain >> $outfile
		printf "$success (%s)\n" "$domain"
	else
		printf "$fail (%s)\n" "$domain"
	fi

done < "${1:-/dev/stdin}"

echo -e "\nPURGE'd URLs saved at $outfile"
